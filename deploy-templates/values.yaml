global:
  container:
    requestsLimitsEnabled: true
  istio:
    sidecar:
      requestsLimitsEnabled: true
      resources:
        requests: {}
        limits: {}
  registry:
    processHistoryServicePersistence:
      container:
        envVars: {}
        resources:
          requests: {}
          limits: {}
      hpa:
        enabled: false
        minReplicas: 1
        maxReplicas: 3
      istio:
        sidecar:
          enabled: true
          resources:
            requests: {}
            limits: {}
      replicas: 1
  kafkaOperator:
    replicationFactor: 3

name: process-history-service-persistence

version: 1.1.0

deployProfile: prod

port: 8080

image:
  name: process-history-service-persistence
  version: latest

service:
  port: 8080

kafka:
  url: kafka-cluster-kafka-bootstrap
  port: 9093
  user: process-history-persistence-user
  clusterName: kafka-cluster
  sslEnabled: true
  sslCertType: PEM
  sslUserKey: ${KAFKA_USER_KEYSTORE_KEY}
  sslUserCertificate: ${KAFKA_USER_KEYSTORE_CERTIFICATE}
  sslClusterCertificate: ${KAFKA_CLUSTER_TRUSTSTORE}
  numPartitions: 15

db:
  url: citus-master
  secret: citus-roles-secrets
  name: process_history
  port: 5432
  connectionTimeout: 4000

monitoring:
  namespace: openshift-monitoring
  prometheusScrapePath: /actuator/prometheus
  jobLabel: app

probes:
  liveness:
    path: /actuator/health/liveness
  readiness:
    path: /actuator/health/readiness

dockerProxyRegistry: nexus-docker-registry.apps.cicd2.mdtu-ddm.projects.epam.com

audit:
  kafka:
    topic: audit-events
    schemaRegistryUrl: http://kafka-schema-registry:8081
